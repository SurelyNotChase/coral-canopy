{"id":"classes/JellyFish.js","dependencies":[{"name":"C:\\Users\\jsnif\\OneDrive\\Desktop\\Spring 2022\\dream-canopy\\package.json","includedInParent":true,"mtime":1646141435109},{"name":"./Entity.js","loc":{"line":1,"column":19,"index":19},"parent":"C:\\Users\\jsnif\\OneDrive\\Desktop\\Spring 2022\\dream-canopy\\src\\classes\\JellyFish.js","resolved":"C:\\Users\\jsnif\\OneDrive\\Desktop\\Spring 2022\\dream-canopy\\src\\classes\\Entity.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JellyFish = void 0;\n\nvar _Entity = require(\"./Entity.js\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/***\r\n *** \r\n ***    Example final inherited Entity class file (only one class per file)\r\n *** \r\n ***/\nvar JellyFish = /*#__PURE__*/function (_Fish) {\n  _inherits(JellyFish, _Fish);\n\n  var _super = _createSuper(JellyFish);\n\n  function JellyFish() {\n    _classCallCheck(this, JellyFish);\n\n    return _super.call(this); //set all JellyFish-unique properties here\n  } //all JellyFish-unique methods here\n\n\n  return _createClass(JellyFish);\n}(_Entity.Fish);\n\nexports.JellyFish = JellyFish;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"classes/JellyFish.js","original":{"line":1,"column":0}},{"generated":{"line":32,"column":0},"source":"classes/JellyFish.js","original":{"line":3,"column":0}},{"generated":{"line":33,"column":0},"source":"classes/JellyFish.js","original":{"line":4,"column":0}},{"generated":{"line":34,"column":0},"source":"classes/JellyFish.js","original":{"line":5,"column":0}},{"generated":{"line":35,"column":0},"source":"classes/JellyFish.js","original":{"line":6,"column":0}},{"generated":{"line":36,"column":0},"source":"classes/JellyFish.js","original":{"line":7,"column":0}},{"name":"JellyFish","generated":{"line":37,"column":4},"source":"classes/JellyFish.js","original":{"line":9,"column":6}},{"generated":{"line":42,"column":0},"source":"classes/JellyFish.js","original":{"line":11,"column":4}},{"generated":{"line":42,"column":23},"source":"classes/JellyFish.js","original":{"line":11,"column":17}},{"generated":{"line":43,"column":0},"source":"classes/JellyFish.js","original":{"line":11,"column":17}},{"generated":{"line":45,"column":0},"source":"classes/JellyFish.js","original":{"line":11,"column":17}},{"generated":{"line":45,"column":30},"source":"classes/JellyFish.js","original":{"line":13,"column":8}},{"generated":{"line":46,"column":0},"source":"classes/JellyFish.js","original":{"line":15,"column":5}},{"generated":{"line":46,"column":4},"source":"classes/JellyFish.js","original":{"line":16,"column":4}},{"name":"Fish","generated":{"line":50,"column":2},"source":"classes/JellyFish.js","original":{"line":9,"column":24}}],"sources":{"classes/JellyFish.js":"import {Fish} from './Entity.js'\r\n\r\n/***\r\n *** \r\n ***    Example final inherited Entity class file (only one class per file)\r\n *** \r\n ***/\r\n\r\nclass JellyFish extends Fish{\r\n    \r\n    constructor(){\r\n        super();\r\n        //set all JellyFish-unique properties here\r\n\r\n    }\r\n    //all JellyFish-unique methods here\r\n\r\n}\r\n\r\nexport {JellyFish}"},"lineCount":null}},"error":null,"hash":"80ca4ddfc90428199b27431b8eb2fdf1","cacheData":{"env":{}}}