{"id":"ro1H","dependencies":[{"name":"C:\\Users\\Chase_Lear\\Documents\\Personal Documents\\RIT\\Courses\\Year4\\Capstone\\dream-canopy-2\\package.json","includedInParent":true,"mtime":1646070802568},{"name":"C:\\Users\\Chase_Lear\\Documents\\Personal Documents\\RIT\\Courses\\Year4\\Capstone\\dream-canopy-2\\node_modules\\@tensorflow\\tfjs-backend-webgl\\package.json","includedInParent":true,"mtime":1645506087312}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.AvgPool3DBackpropProgram=exports.AvgPool2DBackpropProgram=void 0;class t{constructor(t){this.variableNames=[\"dy\"],this.outputShape=t.inShape;const n=t.filterHeight,o=t.filterWidth,i=t.strideHeight,d=t.strideWidth,e=t.dilationHeight,r=t.dilationWidth,a=t.effectiveFilterHeight,y=t.effectiveFilterWidth,l=a-1-t.padInfo.top,s=y-1-t.padInfo.left,c=1/(n*o);this.userCode=`\\n      const ivec2 pads = ivec2(${l}, ${s});\\n      const float avgMultiplier = float(${c});\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < ${a};\\n            wR += ${e}) {\\n          float dyR = float(dyRCorner + wR) / ${i}.0;\\n\\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < ${y};\\n            wC+= ${r}) {\\n            float dyC = float(dyCCorner + wC) / ${d}.0;\\n\\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n\\n            dotProd += dyValue * avgMultiplier;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}exports.AvgPool2DBackpropProgram=t;class n{constructor(t){this.variableNames=[\"dy\"],this.outputShape=t.inShape;const n=t.filterDepth,o=t.filterHeight,i=t.filterWidth,d=t.strideDepth,e=t.strideHeight,r=t.strideWidth,a=t.dilationDepth,y=t.dilationHeight,l=t.dilationWidth,s=t.effectiveFilterDepth,c=t.effectiveFilterHeight,f=t.effectiveFilterWidth,C=s-1-t.padInfo.front,p=c-1-t.padInfo.top,h=f-1-t.padInfo.left,u=1/(n*o*i);this.userCode=`\\n      const ivec3 pads = ivec3(${C}, ${p}, ${h});\\n      const float avgMultiplier = float(${u});\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int ch = coords.u;\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyDCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\\n        // dx(xD, xR, xC, ch).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int wD = 0; wD < ${s};\\n            wD += ${a}) {\\n          float dyD = float(dyDCorner + wD) / ${d}.0;\\n\\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\\n            continue;\\n          }\\n          int idyD = int(dyD);\\n\\n          for (int wR = 0; wR < ${c};\\n              wR += ${y}) {\\n            float dyR = float(dyRCorner + wR) / ${e}.0;\\n\\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\\n                fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            for (int wC = 0; wC < ${f};\\n                wC += ${l}) {\\n              float dyC = float(dyCCorner + wC) / ${r}.0;\\n\\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\\n\\n              dotProd += dyValue * avgMultiplier;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}exports.AvgPool3DBackpropProgram=n;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":0}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":13}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":20}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":35}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":43}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":56}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":57}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":64}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":68}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":76}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":101}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":109}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":139}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":1,"column":141}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":1,"column":147}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":149}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":26,"column":14},"generated":{"line":1,"column":161}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":164}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":169}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":1,"column":183}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":22,"column":19},"generated":{"line":1,"column":184}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":1,"column":190}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":1,"column":195}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":27,"column":23},"generated":{"line":1,"column":207}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":27,"column":32},"generated":{"line":1,"column":209}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":28,"column":10},"generated":{"line":1,"column":217}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":28,"column":10},"generated":{"line":1,"column":223}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":28,"column":25},"generated":{"line":1,"column":225}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":28,"column":34},"generated":{"line":1,"column":227}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":240}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":29,"column":24},"generated":{"line":1,"column":242}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":29,"column":33},"generated":{"line":1,"column":244}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":30,"column":10},"generated":{"line":1,"column":256}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":30,"column":25},"generated":{"line":1,"column":258}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":30,"column":34},"generated":{"line":1,"column":260}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":31,"column":10},"generated":{"line":1,"column":273}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":31,"column":24},"generated":{"line":1,"column":275}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":31,"column":33},"generated":{"line":1,"column":277}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":32,"column":10},"generated":{"line":1,"column":289}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":32,"column":27},"generated":{"line":1,"column":291}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":32,"column":36},"generated":{"line":1,"column":293}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":33,"column":10},"generated":{"line":1,"column":308}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":33,"column":26},"generated":{"line":1,"column":310}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":33,"column":35},"generated":{"line":1,"column":312}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":34,"column":10},"generated":{"line":1,"column":326}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":34,"column":34},"generated":{"line":1,"column":328}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":34,"column":43},"generated":{"line":1,"column":330}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":35,"column":10},"generated":{"line":1,"column":352}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":35,"column":33},"generated":{"line":1,"column":354}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":35,"column":42},"generated":{"line":1,"column":356}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":37,"column":10},"generated":{"line":1,"column":377}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":37,"column":19},"generated":{"line":1,"column":379}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":37,"column":43},"generated":{"line":1,"column":381}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":37,"column":47},"generated":{"line":1,"column":383}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":37,"column":56},"generated":{"line":1,"column":385}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":37,"column":64},"generated":{"line":1,"column":393}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":38,"column":10},"generated":{"line":1,"column":397}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":38,"column":20},"generated":{"line":1,"column":399}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":38,"column":43},"generated":{"line":1,"column":401}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":38,"column":47},"generated":{"line":1,"column":403}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":38,"column":56},"generated":{"line":1,"column":405}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":38,"column":64},"generated":{"line":1,"column":413}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":40,"column":10},"generated":{"line":1,"column":418}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":40,"column":26},"generated":{"line":1,"column":420}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":40,"column":31},"generated":{"line":1,"column":423}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":40,"column":46},"generated":{"line":1,"column":425}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":42,"column":9},"generated":{"line":1,"column":428}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":42,"column":9},"generated":{"line":1,"column":433}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":43,"column":33},"generated":{"line":1,"column":478}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":43,"column":44},"generated":{"line":1,"column":484}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":44,"column":42},"generated":{"line":1,"column":532}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":58,"column":32},"generated":{"line":1,"column":998}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":59,"column":20},"generated":{"line":1,"column":1023}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":60,"column":48},"generated":{"line":1,"column":1078}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":62,"column":36},"generated":{"line":1,"column":1123}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":62,"column":45},"generated":{"line":1,"column":1125}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":67,"column":34},"generated":{"line":1,"column":1266}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":68,"column":19},"generated":{"line":1,"column":1290}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":69,"column":50},"generated":{"line":1,"column":1347}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":71,"column":38},"generated":{"line":1,"column":1394}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":71,"column":47},"generated":{"line":1,"column":1396}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":1699}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":1707}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":1732}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":6},"generated":{"line":1,"column":1734}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":13},"generated":{"line":1,"column":1740}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":93,"column":2},"generated":{"line":1,"column":1742}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":93,"column":14},"generated":{"line":1,"column":1754}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":89,"column":2},"generated":{"line":1,"column":1757}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":89,"column":2},"generated":{"line":1,"column":1762}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":89,"column":18},"generated":{"line":1,"column":1776}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":89,"column":19},"generated":{"line":1,"column":1777}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":94,"column":9},"generated":{"line":1,"column":1783}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":94,"column":9},"generated":{"line":1,"column":1788}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":94,"column":23},"generated":{"line":1,"column":1800}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":94,"column":32},"generated":{"line":1,"column":1802}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":95,"column":10},"generated":{"line":1,"column":1810}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":95,"column":10},"generated":{"line":1,"column":1816}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":95,"column":24},"generated":{"line":1,"column":1818}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":95,"column":33},"generated":{"line":1,"column":1820}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":96,"column":10},"generated":{"line":1,"column":1832}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":96,"column":25},"generated":{"line":1,"column":1834}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":96,"column":34},"generated":{"line":1,"column":1836}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":97,"column":10},"generated":{"line":1,"column":1849}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":97,"column":24},"generated":{"line":1,"column":1851}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":97,"column":33},"generated":{"line":1,"column":1853}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":98,"column":10},"generated":{"line":1,"column":1865}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":98,"column":24},"generated":{"line":1,"column":1867}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":98,"column":33},"generated":{"line":1,"column":1869}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":99,"column":10},"generated":{"line":1,"column":1881}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":99,"column":25},"generated":{"line":1,"column":1883}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":99,"column":34},"generated":{"line":1,"column":1885}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":100,"column":10},"generated":{"line":1,"column":1898}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":100,"column":24},"generated":{"line":1,"column":1900}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":100,"column":33},"generated":{"line":1,"column":1902}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":101,"column":10},"generated":{"line":1,"column":1914}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":101,"column":26},"generated":{"line":1,"column":1916}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":101,"column":35},"generated":{"line":1,"column":1918}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":102,"column":10},"generated":{"line":1,"column":1932}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":102,"column":27},"generated":{"line":1,"column":1934}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":102,"column":36},"generated":{"line":1,"column":1936}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":103,"column":10},"generated":{"line":1,"column":1951}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":103,"column":26},"generated":{"line":1,"column":1953}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":103,"column":35},"generated":{"line":1,"column":1955}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":104,"column":10},"generated":{"line":1,"column":1969}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":104,"column":33},"generated":{"line":1,"column":1971}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":104,"column":42},"generated":{"line":1,"column":1973}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":105,"column":10},"generated":{"line":1,"column":1994}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":105,"column":34},"generated":{"line":1,"column":1996}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":105,"column":43},"generated":{"line":1,"column":1998}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":106,"column":10},"generated":{"line":1,"column":2020}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":106,"column":33},"generated":{"line":1,"column":2022}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":106,"column":42},"generated":{"line":1,"column":2024}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":108,"column":10},"generated":{"line":1,"column":2045}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":108,"column":21},"generated":{"line":1,"column":2047}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":108,"column":44},"generated":{"line":1,"column":2049}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":108,"column":48},"generated":{"line":1,"column":2051}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":108,"column":57},"generated":{"line":1,"column":2053}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":108,"column":65},"generated":{"line":1,"column":2061}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":109,"column":10},"generated":{"line":1,"column":2067}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":109,"column":19},"generated":{"line":1,"column":2069}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":109,"column":43},"generated":{"line":1,"column":2071}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":109,"column":47},"generated":{"line":1,"column":2073}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":109,"column":56},"generated":{"line":1,"column":2075}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":109,"column":64},"generated":{"line":1,"column":2083}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":110,"column":10},"generated":{"line":1,"column":2087}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":110,"column":20},"generated":{"line":1,"column":2089}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":110,"column":43},"generated":{"line":1,"column":2091}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":110,"column":47},"generated":{"line":1,"column":2093}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":110,"column":56},"generated":{"line":1,"column":2095}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":110,"column":64},"generated":{"line":1,"column":2103}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":112,"column":10},"generated":{"line":1,"column":2108}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":112,"column":26},"generated":{"line":1,"column":2110}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":112,"column":31},"generated":{"line":1,"column":2113}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":112,"column":45},"generated":{"line":1,"column":2115}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":112,"column":60},"generated":{"line":1,"column":2117}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":114,"column":9},"generated":{"line":1,"column":2120}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":114,"column":9},"generated":{"line":1,"column":2125}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":115,"column":33},"generated":{"line":1,"column":2170}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":115,"column":46},"generated":{"line":1,"column":2176}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":115,"column":57},"generated":{"line":1,"column":2182}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":116,"column":42},"generated":{"line":1,"column":2230}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":133,"column":32},"generated":{"line":1,"column":2782}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":134,"column":20},"generated":{"line":1,"column":2807}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":135,"column":48},"generated":{"line":1,"column":2862}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":137,"column":36},"generated":{"line":1,"column":2907}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":137,"column":45},"generated":{"line":1,"column":2909}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":142,"column":34},"generated":{"line":1,"column":3049}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":143,"column":22},"generated":{"line":1,"column":3076}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":144,"column":50},"generated":{"line":1,"column":3133}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":146,"column":38},"generated":{"line":1,"column":3180}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":146,"column":47},"generated":{"line":1,"column":3182}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":152,"column":36},"generated":{"line":1,"column":3348}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":153,"column":24},"generated":{"line":1,"column":3377}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":154,"column":52},"generated":{"line":1,"column":3436}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":156,"column":40},"generated":{"line":1,"column":3485}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":156,"column":49},"generated":{"line":1,"column":3487}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":3828}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":3836}},{"source":"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":1,"column":3861}}],"sources":{"../../../../../tfjs-backend-webgl/src/avg_pool_backprop_gpu.ts":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util} from '@tensorflow/tfjs-core';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class AvgPool2DBackpropProgram implements GPGPUProgram {\n  variableNames = ['dy'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: backend_util.Conv2DInfo) {\n    this.outputShape = convInfo.inShape;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n\n    const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n    const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n\n    const avgMultiplier = 1 / (filterHeight * filterWidth);\n\n    this.userCode = `\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n      const float avgMultiplier = float(${avgMultiplier});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${effectiveFilterHeight};\n            wR += ${dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${effectiveFilterWidth};\n            wC+= ${dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n\nexport class AvgPool3DBackpropProgram implements GPGPUProgram {\n  variableNames = ['dy'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: backend_util.Conv3DInfo) {\n    this.outputShape = convInfo.inShape;\n    const filterDepth = convInfo.filterDepth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const strideDepth = convInfo.strideDepth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationDepth = convInfo.dilationDepth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n\n    const padFront = effectiveFilterDepth - 1 - convInfo.padInfo.front;\n    const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n    const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n\n    const avgMultiplier = 1 / (filterDepth * filterHeight * filterWidth);\n\n    this.userCode = `\n      const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n      const float avgMultiplier = float(${avgMultiplier});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${effectiveFilterDepth};\n            wD += ${dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${convInfo.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${effectiveFilterHeight};\n              wR += ${dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${effectiveFilterWidth};\n                wC += ${dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"0db5d9dad008d4448d63244fe2152bf3","cacheData":{"env":{}}}